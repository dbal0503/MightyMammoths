name: CI Pipeline

on:
  push:
    branches:
      - main
      - dev
      - maestro
  pull_request:

jobs:
  sonarqube:
    needs: unit-test 
    environment: Dev
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./frontend/MightyMammoths/package-lock.json

      - name: Create env.tsx
        run: |
            echo "export const GOOGLE_MAPS_API_KEY = '${{ secrets.GOOGLE_MAPS_API_KEY }}';" > frontend/MightyMammoths/env.tsx

      - name: Install Dependencies
        run: |
            cd ./frontend/MightyMammoths
            npm ci
      - name: Run Tests with Coverage
        run: |
            cd ./frontend/MightyMammoths
            npm run test:unit -- --coverage
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: frontend/MightyMammoths/coverage
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: true
          flags: unittests
          verbose: true
            
  e2e-test:
    runs-on: macos-latest
    timeout-minutes: 60
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./frontend/MightyMammoths/package-lock.json

      - name: Create .env file
        run: |
              echo "EXPO_PUBLIC_GOOGLE_MAPS_API_KEY=${{ secrets.EXPO_PUBLIC_GOOGLE_MAPS_API_KEY }}" > frontend/MightyMammoths/.env

      - name: Install Project Dependencies
        run: |
          cd ./frontend/MightyMammoths
          npm ci
      
      - name: Install Global Dependencies
        run: |
          brew install watchman
          brew tap wix/brew
          brew install applesimutils
      
      - name: Prebuild Expo and Install CocoaPods
        run: |
          cd ./frontend/MightyMammoths
          npx expo prebuild --clean 
          cd ios
          pod install

      - name: Start iOS Simulator
        run: |
          xcrun simctl boot "iPhone 15 Pro" || true
          xcrun simctl list devices | grep Booted
      
      - name: Build App
        run: |
          cd ./frontend/MightyMammoths
          npx expo run:ios --device

      - name: Install Maestro
        run: |
          curl -fsSL "https://get.maestro.mobile.dev" | bash

      - name: Run E2E Tests
        run: |
          cd ./frontend/MightyMammoths
          maestro record maestro/LOY-button-test.yaml --local test.mp4

      - name: Upload Test Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-videos
          path: test.mp4

  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - uses: actions/checkout@v4
      
      - name: "Setup Node.js"
        uses: actions/setup-node@v2
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./frontend/MightyMammoths/package-lock.json
      
      - name: Create env.tsx
        run: |
              echo "export const GOOGLE_MAPS_API_KEY = '${{ secrets.GOOGLE_MAPS_API_KEY }}';" > frontend/MightyMammoths/env.tsx
      
      - name: "Install Dependencies"
        run: | 
          cd ./frontend/MightyMammoths  
          npm ci

      
      - name: "Run Lint"
        run: |
          cd ./frontend/MightyMammoths
          npm run lint
