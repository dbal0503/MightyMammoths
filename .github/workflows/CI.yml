name: CI Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:

jobs:
  sonarqube:
    needs: unit-test 
    environment: Dev
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./frontend/MightyMammoths/package-lock.json

      - name: Create .env
        run: |
            echo "EXPO_PUBLIC_GOOGLE_MAPS_API_KEY=${{ secrets.EXPO_PUBLIC_GOOGLE_MAPS_API_KEY }}" > frontend/MightyMammoths/.env

      - name: Install Dependencies
        run: |
            cd ./frontend/MightyMammoths
            npm ci
      - name: Run Tests with Coverage
        run: |
            cd ./frontend/MightyMammoths
            npm run test:unit -- --coverage
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: frontend/MightyMammoths/coverage
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          fail_ci_if_error: true
          flags: unittests
          verbose: true
            
  e2e-test:
    runs-on: macos-latest
    timeout-minutes: 60
    env:
      EXPO_NO_INTERACTIVE: 1
      EXPO_METRO_CACHE: 1
      NODE_OPTIONS: '--max_old_space_size=4096'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./frontend/MightyMammoths/package-lock.json

      - name: Create .env file
        run: |
              echo "EXPO_PUBLIC_GOOGLE_MAPS_API_KEY=${{ secrets.EXPO_PUBLIC_GOOGLE_MAPS_API_KEY }}" > frontend/MightyMammoths/.env

      - name: Install Project Dependencies
        run: |
          cd ./frontend/MightyMammoths
          npm ci
      
      - name: Install Global Dependencies
        run: |
          brew install watchman
          brew tap wix/brew
          brew install applesimutils
      
      - name: Prebuild Expo and Install CocoaPods
        run: |
          cd ./frontend/MightyMammoths
          npx expo prebuild --clean 
          cd ios
          pod install

      - name: Start iOS Simulator
        run: |
          xcrun simctl boot "iPhone 15 Pro" || true
          xcrun simctl list devices | grep Booted
      
      - name: Build App
        run: |
          cd ./frontend/MightyMammoths
          npx expo run:ios --device "iPhone 15 Pro" &
          while ! xcrun simctl get_app_container booted com.anonymous.MightyMammoths data >/dev/null 2>&1; do
            sleep 5
          done

      - name: Install Maestro
        run: |
          export MAESTRO_VERSION=1.39.9
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH

      - name: E2E Tests with Recording
        env: 
          MAESTRO_DRIVER_STARTUP_TIMEOUT: 360000
        run: | 
          cd ./frontend/MightyMammoths
          mkdir -p test-videos
          
          run_test_with_recording() {
            local test_file=$1
            local filename=$(basename "$test_file" .yaml)
            echo "Running test with recording: $test_file"
            
            for attempt in {1..3}; do
              echo "Attempt $attempt for $test_file"
              if maestro test --record-video "./test-videos/${filename}.mp4" "$test_file"; then
                echo "Test passed on attempt $attempt"
                return 0
              else
                echo "Test failed on attempt $attempt"
                if [ $attempt -eq 3 ]; then
                  echo "Test failed after 3 attempts"
                  return 1
                fi
                sleep 10
              fi
            done
          }
          
          overall_status=0
          
          for test_file in maestro/home-page-tests/main-tests.yaml maestro/home-page-sheet-tests/main-tests.yaml maestro/navigation-tests/main-tests.yaml maestro/building-marker-information-tests/main-tests.yaml maestro/google-calendar-tests/main-tests.yaml; do
            if ! run_test_with_recording "$test_file"; then
              overall_status=1
            fi
          done

          exit $overall_status
        
      - name: Upload Test Artifacts
        if: always()  
        uses: actions/upload-artifact@v4
        with:
          name: test-videos
          path: ./frontend/MightyMammoths/test-videos/*.mp4
      #    maestro record maestro/LOY-button-test.yaml --local LOYButtonTest.mp4

      #- name: Upload Test Artifacts
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: test-videos
      #    path: LOYButtonTest.mp4

  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - uses: actions/checkout@v4
      
      - name: "Setup Node.js"
        uses: actions/setup-node@v2
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./frontend/MightyMammoths/package-lock.json
      
      - name: Create .env
        run: |
              echo "EXPO_PUBLIC_GOOGLE_MAPS_API_KEY=${{ secrets.EXPO_PUBLIC_GOOGLE_MAPS_API_KEY }}" > frontend/MightyMammoths/.env
      
      - name: "Install Dependencies"
        run: | 
          cd ./frontend/MightyMammoths  
          npm ci

      
      - name: "Run Lint"
        run: |
          cd ./frontend/MightyMammoths
          npm run lint
