name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  sonarqube:
    environment: Dev
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./frontend/MightyMammoths/package-lock.json

      - name: Install Dependencies
        run: |
            cd ./frontend/MightyMammoths
            npm ci
      - name: Run Tests
        run: |
            cd ./frontend/MightyMammoths
            npm run test:unit
            
  e2e-test:
    runs-on: macos-latest
    env:
      EXPO_NO_INTERACTIVE: 1
      DETOX_START_TIMEOUT: 60000
      EXPO_METRO_CACHE: 1
      NODE_OPTIONS: '--max_old_space_size=4096'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./frontend/MightyMammoths/package-lock.json
      
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-
      
      - name: Cache CocoaPods dependencies
        uses: actions/cache@v3
        with:
          path: ~/Library/Caches/CocoaPods
          key: pods-cache-${{ runner.os }}-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: pods-cache-
      
      - name: Cache Metro Bundler
        uses: actions/cache@v3
        with:
          path: |
            ~/.metro
            ~/Library/Caches/metro
          key: metro-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: metro-cache-
      
      - name: Install Global Dependencies
        run: |
          npm install -g expo-cli
          npm install -g detox-cli
          brew install watchman
          brew tap wix/brew
          brew install applesimutils
      
      - name: Install Project Dependencies
        run: |
          cd ./frontend/MightyMammoths
          npm ci
      
      - name: Prepare iOS Simulator
        run: |
          xcrun simctl delete unavailable
          
          SIMULATOR_NAME="E2E-iPhone-15-Pro"
          xcrun simctl create "$SIMULATOR_NAME" \
            com.apple.CoreSimulator.SimDeviceType.iPhone-15-Pro \
            com.apple.CoreSimulator.SimRuntime.iOS-17-0
          
          xcrun simctl boot "$SIMULATOR_NAME"
          
          xcrun simctl list devices | grep "Booted"
          while [ $? -ne 0 ]; do
            sleep 5
            xcrun simctl list devices | grep "Booted"
          done
      
      - name: Build Expo App for iOS Simulator
        run: |
          cd ./frontend/MightyMammoths
          npx expo prebuild --no-install
          npx expo run:ios \
            --no-build-cache \
            --simulator "E2E-iPhone-15-Pro"
      
      - name: Run Detox E2E Tests
        timeout-minutes: 15
        continue-on-error: true
        run: |
          cd ./frontend/MightyMammoths
          npx detox test \
            --configuration ios.sim.release \
            --headless \
            --retries 2

  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - uses: actions/checkout@v4
      
      - name: "Setup Node.js"
        uses: actions/setup-node@v2
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ./frontend/MightyMammoths/package-lock.json
      
      - name: "Install Dependencies"
        run: | 
          cd ./frontend/MightyMammoths  
          npm ci

      
      - name: "Run Lint"
        run: |
          cd ./frontend/MightyMammoths
          npm run lint
  